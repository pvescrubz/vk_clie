import { ShareData } from '../types';
import styles from './ShareResults.module.css';

interface ShareResultsProps {
  result: ShareData | null;
}

export const ShareResults: React.FC<ShareResultsProps> = ({ result }) => {
  if (!result) return null;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  if (!result.success || result.error) {
    return (
      <div className={styles.error}>
        <strong>–û—à–∏–±–∫–∞:</strong> {result.error || result.message}
        {result.details && (
          <div className={styles.errorDetails}>–î–µ—Ç–∞–ª–∏: {result.details}</div>
        )}
      </div>
    );
  }

  const summary = result.summary || result.data;

  if (!summary) {
    return (
      <div className={styles.error}>
        <strong>–û—à–∏–±–∫–∞:</strong> –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
      </div>
    );
  }

  return (
    <div className={styles.container}>
      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className={styles.summary}>
        <h3>üìä –ò–¢–û–ì–ò –†–ê–°–°–´–õ–ö–ò</h3>
        <div className={styles.stats}>
          <div className={styles.statItem}>
            <span className={styles.statLabel}>–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</span>
            <span className={styles.statValue}>{summary.totalMessages}</span>
          </div>
          <div className={styles.statItem}>
            <span className={styles.statLabel}>‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫:</span>
            <span className={styles.statSuccess}>{summary.successfulMessages}</span>
          </div>
          <div className={styles.statItem}>
            <span className={styles.statLabel}>‚ùå –û—à–∏–±–æ–∫:</span>
            <span className={styles.statError}>{summary.failedMessages}</span>
          </div>
          {summary.totalSenders && (
            <div className={styles.statItem}>
              <span className={styles.statLabel}>üë• –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π:</span>
              <span className={styles.statValue}>{summary.totalSenders}</span>
            </div>
          )}
          <div className={styles.statItem}>
            <span className={styles.statLabel}>üìç –ü–æ—Å—Ç:</span>
            <span className={styles.statValue}>{summary.postInfo.fullPostId}</span>
          </div>
          <div className={styles.statItem}>
            <span className={styles.statLabel}>üîó URL:</span>
            <a href={summary.postUrl} target="_blank" rel="noopener noreferrer" className={styles.link}>
              {summary.postUrl}
            </a>
          </div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
      {summary.results && summary.results.length > 0 && (
        <div className={styles.details}>
          <h4>–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:</h4>
          <div className={styles.resultsList}>
            {summary.results.map((item, index) => (
              <div key={index} className={`${styles.resultItem} ${item.success ? styles.success : styles.failed}`}>
                <div className={styles.resultHeader}>
                  <span className={styles.senderInfo}>
                    üì§ {item.senderName} ‚Üí {item.receiverName}
                  </span>
                  {item.messageNumber && (
                    <span className={styles.messageNumber}>#{item.messageNumber}</span>
                  )}
                </div>
                <div className={styles.resultMessage}>
                  {item.success ? '‚úÖ ' : '‚ùå '}
                  {item.message || (item.success ? '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : item.error || '–û—à–∏–±–∫–∞')}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –û–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
      {result.message && (
        <div className={styles.message}>
          {result.message}
        </div>
      )}
    </div>
  );
};